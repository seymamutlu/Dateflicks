{"version":3,"sources":["../src/index.js"],"names":["Discovery","require","Requester","Responder","Publisher","Subscriber","Sockend","Monitor","MonitoringTool","TimeBalancedRequester","PendingBalancedRequester","_","cote","options","defaults","environment","useHostNames","broadcast","multicast","environmentSettings","process","env","COTE_ENV","COTE_USE_HOST_NAMES","COTE_BROADCAST_ADDRESS","DOCKERCLOUD_IP_ADDRESS","undefined","COTE_MULTICAST_ADDRESS","keys","Object","filter","k","slice","forEach","keyName","keyArray","split","map","toLowerCase","pluginName","shift","pluginObj","toUpperCase","setDefaults","components","component","setEnvironment","setUseHostNames","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["const Discovery = require('./components/discovery');\nconst Requester = require('./components/requester');\nconst Responder = require('./components/responder');\nconst Publisher = require('./components/publisher');\nconst Subscriber = require('./components/subscriber');\nconst Sockend = require('./components/sockend');\nconst Monitor = require('./components/monitor');\nconst MonitoringTool = require('./monitoring-tool');\nconst TimeBalancedRequester = require('./components/time-balanced-requester');\nconst PendingBalancedRequester = require('./components/pending-balanced-requester');\n\nconst _ = require('lodash');\n\nconst cote = (options) => {\n    options = options || {};\n\n    const defaults = {\n        environment: '',\n        useHostNames: false,\n        broadcast: null,\n        multicast: null,\n    };\n\n    const environmentSettings = {\n        environment: process.env.COTE_ENV,\n        useHostNames: !!process.env.COTE_USE_HOST_NAMES,\n        broadcast: process.env.COTE_BROADCAST_ADDRESS ||\n        (process.env.DOCKERCLOUD_IP_ADDRESS ? '10.7.255.255' : undefined),\n        multicast: process.env.COTE_MULTICAST_ADDRESS,\n    };\n\n    const keys = Object.keys(process.env).filter((k) => k.slice(0, 15) == 'COTE_DISCOVERY_');\n\n    keys.forEach((k) => {\n        const keyName = k.slice(15);\n        const keyArray = keyName.split('_').map((k) => k.toLowerCase());\n        const pluginName = keyArray.shift();\n\n        const pluginObj = environmentSettings[pluginName] = environmentSettings[pluginName] || {};\n\n        keyArray.forEach((k) => {\n            pluginObj[k] = process.env[`COTE_DISCOVERY_${pluginName.toUpperCase()}_${k.toUpperCase()}`];\n        });\n\n        // Discovery plugins (such as redis) may not have access to real IP addresses.\n        // Therefore we automatically default to `true` for `COTE_USE_HOST_NAMES`,\n        // since host names are accurate.\n        environmentSettings.useHostNames = true;\n    });\n\n    _.defaults(options, environmentSettings, defaults);\n\n    Discovery.setDefaults(options);\n\n    const components = [\n        Requester,\n        Responder,\n        Publisher,\n        Subscriber,\n        Sockend,\n        TimeBalancedRequester,\n        PendingBalancedRequester,\n    ];\n\n    components.forEach(function(component) {\n        component.setEnvironment(options.environment);\n        component.setUseHostNames &&\n            component.setUseHostNames(options.useHostNames);\n    });\n\n    return cote;\n};\n\ncote.Requester = Requester;\ncote.Responder = Responder;\ncote.Publisher = Publisher;\ncote.Subscriber = Subscriber;\ncote.Sockend = Sockend;\ncote.Monitor = Monitor;\ncote.MonitoringTool = MonitoringTool;\ncote.TimeBalancedRequester = TimeBalancedRequester;\ncote.PendingBalancedRequester = PendingBalancedRequester;\n\nmodule.exports = cote();\n"]}